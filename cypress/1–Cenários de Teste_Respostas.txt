1.Dado esse cenário, como você iniciaria uma estratégia de teste?
Como QA eu iniciaria a estratégia de testes com algumas ações iniciais.
    1. Entendimento do Projeto: Primeiro, é fundamental compreender bem o projeto, seus objetivos, escopo, público-alvo, e suas possíveis integrações.
    Neste caso como QA me aproximaria o máximo dos stakeholders(imobiliárias, clientes e bancos), equipes de desenvolvimento, arquitetos etc..com o objetivo de extratir o máximo 
    de informações que embasem o início de uma estratégia dos testes.
   

2.Quais abordagens de teste você consideraria?
Resposta: Dado ao contexto em que está sendo mapeado, buscaria efetuar abordagens iniciais a seguir:
1.Abordaria a prática "Shif-Left Testing”" que é, pesando em etapas de desenvolvimento “deslocar as atividades de teste para a esquerda" significa que os testes iniciam mais cedo e duram todo o ciclo de vida do desenvolvimento do software.
2.Abordaria um "teste de Contrato" após as primeiras documentações/informações adquiridas pelo time.
3.Dados ao alto volume de transações esse projeto é impressindível teste não funcionais de performançe desempenho e carga como (Fumaça,Pico,Cargae e Stress).

3.Como você trabalharia com diferentes tipos/níveis de teste?
Resposta:
1.Usaria referencia no conceito de "Piramide de teste" com todos os seus níveis, abordando/incentivando execução de testes unitários, componetes e2e e etc ..buscando o máximo de cobertura em todas as camadas (APIS, microserviçoes, componentes e o próprio website).
2.Utilizaria técnicas/tipos de testes como: analise de valor limítrofe, partição de equivalência, permutação, regressivos, confirmação,validação etc..
3.Testes automáticos em cada camada do software com maior cobertura possível.


4. Quais ferramentas você consideraria usar?
Resposta: para consegur aplicar/fomentar qualidade em toda fase de desenvolvimento consideraria o uso das seguintes ferramentas por camadas/níveis.
1.Testes Unitário: Linguagem Java, usaria o Junit, Wiremoc para testes de Mokcks, Sonar para monitorar o percentual de cobertua dos testes unitários. Essas ferramentas entram como sugestão, a decisão final seria feita pelo time de desenvolvimento.
2.Testes Funcionais(BackEnd): utilizaria Postman, Swagger e ou Insomnia para fazer as requisições e testes funcionaisdas APIS.
3.Testes Automatizados (BackEnd): para Java utilizaria (junit+restassured) para testes de API rest, em Javascript o próprio cypress, ou também o postman.
4.Testes Automáticos(Frontend):Lingugem Java utilizario o Selenium Webdrive, o Cypress e também Docker como recurso de testes em ambientes estáveis.
5. CI/CD: utilizaria o Jenkins, githubactions ou azureDevops, na construção das pipelines e testes nos ambientes clouds e esteira.
6.Teste de performançe: utilizaroa o Jmeter ou o K6 para promover testes de desempenho nas apis, ou grafana também.
7.Gerenciamento de teste: Utilizaria Azure, Jira, TestLink, cadastrar/gerenciar os testes, podendo ser escrito no formato procedural ou gherkin.

5.Como você se imagina atuando nessa equipe?
Resposta: